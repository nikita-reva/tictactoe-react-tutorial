{"version":3,"sources":["Square.js","Board.js","index.js"],"names":["Square","props","className","onClick","style","color","value","Board","i","winLines","this","backgroundColor","includes","key","squares","board","r","c","push","renderSquare","renderBoard","React","Component","Game","state","history","Array","fill","lastClicked","stepNumber","xIsNext","reversed","slice","length","calculateWinner","getWinLines","setState","concat","stepNr","status","current","winner","moves","map","step","move","position","index","Math","floor","getPosition","buttonClass","desc","jumpTo","order","olReversed","buttonSort","sortMoves","reverse","handleClick","lines","a","b","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f14fac60.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Square(props) {\r\n\treturn (\r\n\t\t<button \r\n\t\t\tclassName=\"square\" \r\n\t\t\tonClick={props.onClick}\r\n            style={props.color}\r\n\t\t>\r\n\t\t\t{props.value}\r\n\t\t</button>\r\n\t);\r\n}\r\n\r\nexport default Square;","import React from 'react';\r\nimport Square from './Square';\r\n\r\nclass Board extends React.Component {\r\n\trenderSquare(i) {\r\n        const winLines = this.props.winLines;\r\n        let color = {backgroundColor: \"white\"};\r\n        if(winLines !== null && winLines.includes(i)) {\r\n            color = {backgroundColor: \"green\"}\r\n        }\r\n\r\n        return (\r\n\t\t<Square \r\n\t\t\tkey={i}\r\n            value={this.props.squares[i]}\r\n\t\t\tonClick={() => this.props.onClick(i)}\r\n            color={color}\r\n\t\t\t/>\r\n\t\t);\r\n    }\r\n    \r\n    renderBoard() {\r\n        let board = [];\r\n        for(let r = 0; r < 3; r++) {\r\n            let squares = [];\r\n            for(let c = 0; c < 3; c++) {\r\n                squares.push(this.renderSquare(c+3*r));\r\n            }\r\n            board.push(<div key={r} className=\"board-row\">{squares}</div>);\r\n        }\r\n        return board;\r\n    }\r\n    \r\n    render() {\r\n        return this.renderBoard();\r\n    }\r\n}\r\n\r\nexport default Board;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Board from './Board.js';\r\n\r\nclass Game extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props); \r\n\t\tthis.state = {\r\n\t\t\thistory: [{\r\n\t\t\t\tsquares: Array(9).fill(null),\r\n\t\t\t\tlastClicked: null,\r\n\t\t\t}],\r\n\t\t\tstepNumber: 0,\r\n\t\t\txIsNext: true,\r\n\t\t\treversed: false,\r\n\t\t\twinLines: Array(3).fill(null),\r\n\t\t}\r\n\t}\r\n\r\n\thandleClick(i) {\r\n\t\tconst history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n\t\tconst current = history[history.length - 1];\r\n\t\tconst squares = current.squares.slice();\r\n\t\tif(calculateWinner(getWinLines(squares), squares) || squares[i]) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsquares[i] = this.state.xIsNext ? 'X' : 'O';\r\n\t\tthis.setState({\r\n\t\t\thistory: history.concat([\r\n\t\t\t\t{\r\n\t\t\t\t\tsquares: squares,\r\n\t\t\t\t\tlastClicked: i,\r\n\t\t\t\t}\r\n\t\t\t]),\r\n\t\t\t\r\n\t\t\tstepNumber: history.length,\r\n\t\t\txIsNext: !this.state.xIsNext,\r\n\t\t\t});\r\n\t}\r\n\r\n\tjumpTo(stepNr) {\r\n\t\tthis.setState({\r\n\t\t\tstepNumber: stepNr,\r\n\t\t\txIsNext: (stepNr % 2) === 0,\r\n\t\t});\r\n\t}\r\n\r\n\tsortMoves() {\r\n\t\tif(!this.state.reversed) {\r\n\t\t\tthis.setState({\r\n\t\t\t\treversed: true,\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\treversed: false,\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tconst history = this.state.history;\r\n\t\tconst current = history[this.state.stepNumber];\r\n\t\tconst winLines = getWinLines(current.squares);\r\n\t\tconst winner = calculateWinner(winLines, current.squares);\r\n\r\n\t\tlet moves = history.map((step, move) => {\r\n\t\t\tconst position = getPosition(step.lastClicked)\r\n\t\t\tconst stepNumber = this.state.stepNumber;\r\n\t\t\tconst buttonClass = stepNumber === move ? \"button-selected\" : \"\"; \r\n\r\n\t\t\tconst desc = move ? \r\n\t\t\t\t\"Go to move #\" + move + \" (\" + (move % 2 ? 'X' : 'O') + \" placed at \" + \"col \" + position[0] + \", row \" + position[1] + \")\":\r\n\t\t\t\t\"Go to game start\";\r\n\t\t\treturn (\r\n\t\t\t\t<li key={move}>\r\n\t\t\t\t\t<button className={buttonClass} onClick={() => this.jumpTo(move)}>{desc}</button>\r\n\t\t\t\t</li>\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\tconst reversed = this.state.reversed;\r\n\t\tconst order = reversed ? 'ascending' : 'descending';\r\n\t\tconst olReversed = reversed ? 'reversed' : '';\r\n\t\tconst buttonSort = <button className=\"button-sort\" onClick={() => {this.sortMoves()}}>{'Sort in ' + order + ' order'}</button>;\r\n\r\n\t\tmoves = reversed ? moves.reverse() : moves;\r\n\r\n\r\n\t\tlet status;\r\n\r\n\t\tif(winner) {\r\n\t\t  \tstatus = 'Winner: ' + winner;\r\n\t\t} else {\r\n\t\t\t  for(let i = 0; i < 9; i++) {\r\n\t\t\t\tif(current.squares[i] === null) {\r\n\t\t\t\t\tstatus = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstatus = \"It's a draw!\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div className=\"game\">\r\n\t\t\t\t<div className=\"game-board\">\r\n\t\t\t\t\t<Board \r\n\t\t\t\t\t\tsquares={current.squares}\r\n\t\t\t\t\t\tonClick={(i) => this.handleClick(i)}\r\n\t\t\t\t\t\twinLines={winLines}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"game-info\">\r\n\t\t\t\t\t<div>{status}</div>\r\n\t\t\t\t\t<div>{buttonSort}</div>\r\n\t\t\t\t\t<ol reversed={olReversed}>{moves}</ol>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nReactDOM.render(<Game />, document.getElementById('root'));\r\n// ========================================\r\n\r\nfunction calculateWinner(winLines, squares) {\r\n\tlet winner = null;\r\n\tif(winLines !== null) {\r\n\t\treturn winner = squares[winLines[0]];\r\n\t}\r\n\treturn winner = null;\r\n}\r\n\r\nfunction getWinLines(squares) {\r\n\tconst lines = [\r\n\t\t[0, 1, 2],\r\n\t  \t[3, 4, 5],\r\n\t\t[6, 7, 8],\r\n\t\t[0, 3, 6],\r\n\t\t[1, 4, 7],\r\n\t\t[2, 5, 8],\r\n\t\t[0, 4, 8],\r\n\t\t[2, 4, 6],\r\n\t];\r\n\tfor (let i = 0; i < lines.length; i++) {\r\n\t  \tconst [a, b, c] = lines[i];\r\n\t  \tif (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n\t\t\treturn lines[i]\r\n\t  \t}\r\n\t}\r\n\treturn null;\r\n}\r\n\r\nfunction getPosition(index) {\r\n\tconst position = Array(2);\r\n\tposition[0] = (index % 3) + 1;\r\n\tposition[1] = Math.floor((index + 3) / 3);\r\n\r\n\treturn position;\r\n}"],"sourceRoot":""}